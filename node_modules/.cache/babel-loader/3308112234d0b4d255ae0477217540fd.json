{"ast":null,"code":"const base_url = 'http://localhost:3004/posts';\n\nasync function getPost(postID) {\n  // get a unique post\n  // [TODO] remove this return to use a fetch API\n  const response = await fetch(`${base_url}/${postID}`);\n  return await response.json(); // return {\n  //     id: 1,\n  //     title: 'title',\n  //     userId: 1,\n  //     body: 'body',\n  //     postImageUrl: 'https://picsum.photos/1280/960',\n  // }\n}\n\nasync function getPosts() {\n  // get all posts\n  // [TODO] remove this return to use a fetch API\n  const response = await fetch(base_url);\n  const dataPosts = await response.json();\n  return dataPosts; // return [\n  //     {\n  //         id: 1,\n  //         title: 'title',\n  //         userId: 1,\n  //         body: 'body',\n  //         postImageUrl: 'https://picsum.photos/1280/960',\n  //     },\n  //     {\n  //         id: 2,\n  //         title: 'title 2',\n  //         userId: 2,\n  //         body: 'body 2',\n  //         postImageUrl: 'https://picsum.photos/1280/960',\n  //     },\n  // ]\n}\n\nasync function createPost(post) {\n  // create a new post\n  // [TODO] remove this return to use a fetch API\n  const requestPost = {\n    method: 'POST',\n    id: 1,\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      title: 'React POST Request Example',\n      userId: 1,\n      bodypost: 'body',\n      postImageUrl: 'https://picsum.photos/1280/960'\n    })\n  };\n  const response = await fetch(base_url, requestPost);\n  const dataPosts = await response.json();\n  return dataPosts; // return {\n  //     id: 1,\n  //     title: 'title',\n  //     userId: 1,\n  //     body: 'body',\n  //     postImageUrl: 'https://picsum.photos/1280/960',\n  // }\n}\n\nasync function updatePost(post) {\n  // update a existing post\n  // [TODO] remove this return to use a fetch API\n  return {\n    id: 1,\n    title: 'title',\n    userId: 1,\n    body: 'body',\n    postImageUrl: 'https://picsum.photos/1280/960'\n  };\n}\n\nasync function deletePost(postID) {\n  // delete a existing post\n  // [TODO] remove this return to use a fetch API\n  return 1;\n}\n\nexport { getPost, getPosts, deletePost, updatePost, createPost };","map":{"version":3,"sources":["/Users/klevishhaljothi/Downloads/React-workshop-main/src/api/post.ts"],"names":["base_url","getPost","postID","response","fetch","json","getPosts","dataPosts","createPost","post","requestPost","method","id","headers","body","JSON","stringify","title","userId","bodypost","postImageUrl","updatePost","deletePost"],"mappings":"AAGA,MAAMA,QAAQ,GAAG,6BAAjB;;AAEA,eAAeC,OAAf,CAAuBC,MAAvB,EAA0D;AACtD;AACA;AACA,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,QAAS,IAAGE,MAAO,EAAvB,CAA5B;AACA,SAAO,MAAMC,QAAQ,CAACE,IAAT,EAAb,CAJsD,CAMtD;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AAED,eAAeC,QAAf,GAAgD;AAC5C;AACA;AAEA,QAAMH,QAAQ,GAAG,MAAMC,KAAK,CAACJ,QAAD,CAA5B;AACA,QAAMO,SAAS,GAAG,MAAMJ,QAAQ,CAACE,IAAT,EAAxB;AAEA,SAAOE,SAAP,CAP4C,CAS5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AAED,eAAeC,UAAf,CAA0BC,IAA1B,EAA4D;AACxD;AACA;AACA,QAAMC,WAAW,GAAG;AAChBC,IAAAA,MAAM,EAAC,MADS;AAEhBC,IAAAA,EAAE,EAAE,CAFY;AAGhBC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAHO;AAIhBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,MAAAA,KAAK,EAAE,4BADU;AAEjBC,MAAAA,MAAM,EAAE,CAFS;AAGjBC,MAAAA,QAAQ,EAAE,MAHO;AAIjBC,MAAAA,YAAY,EAAE;AAJG,KAAf;AAJU,GAApB;AAYA,QAAMjB,QAAQ,GAAG,MAAMC,KAAK,CAACJ,QAAD,EAAWU,WAAX,CAA5B;AACA,QAAMH,SAAS,GAAG,MAAMJ,QAAQ,CAACE,IAAT,EAAxB;AAEA,SAAOE,SAAP,CAlBwD,CAoBxD;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AAED,eAAec,UAAf,CAA0BZ,IAA1B,EAAqD;AACjD;AACA;AACA,SAAO;AACHG,IAAAA,EAAE,EAAE,CADD;AAEHK,IAAAA,KAAK,EAAE,OAFJ;AAGHC,IAAAA,MAAM,EAAE,CAHL;AAIHJ,IAAAA,IAAI,EAAE,MAJH;AAKHM,IAAAA,YAAY,EAAE;AALX,GAAP;AAOH;;AAED,eAAeE,UAAf,CAA0BpB,MAA1B,EAAmE;AAC/D;AACA;AACA,SAAO,CAAP;AACH;;AAED,SAASD,OAAT,EAAkBK,QAAlB,EAA4BgB,UAA5B,EAAwCD,UAAxC,EAAoDb,UAApD","sourcesContent":["import { Post, PostContent } from './types'\nimport axios from 'axios'\n\nconst base_url = 'http://localhost:3004/posts'\n\nasync function getPost(postID: Post['id']): Promise<Post> {\n    // get a unique post\n    // [TODO] remove this return to use a fetch API\n    const response = await fetch(`${base_url}/${postID}`);\n    return await response.json();\n\n    // return {\n    //     id: 1,\n    //     title: 'title',\n    //     userId: 1,\n    //     body: 'body',\n    //     postImageUrl: 'https://picsum.photos/1280/960',\n    // }\n}\n\nasync function getPosts(): Promise<Array<Post>> {\n    // get all posts\n    // [TODO] remove this return to use a fetch API\n\n    const response = await fetch(base_url);\n    const dataPosts = await response.json();\n\n    return dataPosts\n\n    // return [\n    //     {\n    //         id: 1,\n    //         title: 'title',\n    //         userId: 1,\n    //         body: 'body',\n    //         postImageUrl: 'https://picsum.photos/1280/960',\n    //     },\n    //     {\n    //         id: 2,\n    //         title: 'title 2',\n    //         userId: 2,\n    //         body: 'body 2',\n    //         postImageUrl: 'https://picsum.photos/1280/960',\n    //     },\n    // ]\n}\n\nasync function createPost(post: PostContent): Promise<Post> {\n    // create a new post\n    // [TODO] remove this return to use a fetch API\n    const requestPost = {\n        method:'POST',\n        id: 1,\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ \n            title: 'React POST Request Example', \n            userId: 1,\n            bodypost: 'body',\n            postImageUrl: 'https://picsum.photos/1280/960',        \n        }),\n\n    };\n    const response = await fetch(base_url, requestPost)\n    const dataPosts = await response.json();\n\n    return dataPosts\n\n    // return {\n    //     id: 1,\n    //     title: 'title',\n    //     userId: 1,\n    //     body: 'body',\n    //     postImageUrl: 'https://picsum.photos/1280/960',\n    // }\n}\n\nasync function updatePost(post: Post): Promise<Post> {\n    // update a existing post\n    // [TODO] remove this return to use a fetch API\n    return {\n        id: 1,\n        title: 'title',\n        userId: 1,\n        body: 'body',\n        postImageUrl: 'https://picsum.photos/1280/960',\n    }\n}\n\nasync function deletePost(postID: Post['id']): Promise<Post['id']> {\n    // delete a existing post\n    // [TODO] remove this return to use a fetch API\n    return 1\n}\n\nexport { getPost, getPosts, deletePost, updatePost, createPost }\n"]},"metadata":{},"sourceType":"module"}